server:
  servlet:
    context-path: /RMBTControlServer
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: rtr-backend
  datasource:
    poolSize: 20
    minIdle: 1
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${CONTROL_DB_HOST:127.0.0.1}:${CONTROL_DB_PORT:5431}/${CONTROL_DB_NAME:rmbt}
    username: ${CONTROL_DB_USER:rmbt}
    password: ${CONTROL_DB_PASSWORD}
#    tomcat:
#      test-while-idle: true
#      test-on-borrow: true
#      validation-query: SELECT 1
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: false
  jackson:
    default-property-inclusion: non_null
RMBT_SECRETKEY: RMBT_SECRETKEY

auth0:
  issuer: https://auth.a2332751-f1b8-4d26-8291.example.com
  apiAudience: https://example.com
origin: https://www.netztest.at
app:
  rmbt:
    accuracyDetailLimit: 10000
    accuracyButtonLimit: 2000
    version: 0.1.0 || 0.3.0 || ^1.0.0
    language:
      supportedLanguages:
        - de
        - en
        - hr
        - sv
        - pl
        - es
        - is
        - fr
        - nb
        - cs
      defaultLanguage: en
    clientNames:
      - RMBT
      - RMBTjs
      - Open-RMBT
      - RMBTws
      - HW-PROBE
      - RTR-Netztest
      - RMBTel
application-version:
  host: rtr-api-dev
  server-url: http://localhost:80/RMBTControlServer

elastic-index:
  basicTenantIndexes:
    rtr: basic_test_rtr
  basicQosTenantIndexes:
    rtr: basic_qos_test_rtr
  keepAlive: keep_alive

client-tenant:
  clientTenantMapping:
    rtr: rtr
  defaultTenant: rtr

measurement-server:
  host: http://localhost:8080
  slotWindow: 5
  defaultProviderId: 6

jira:
  requestTypeId: 0
  serviceDeskId: 60
  url: https://example.com
  username: root@example.com
  password: invalid

---
spring:
  activate:
    on-profile: dev
  datasource:
    poolSize: 20
    minIdle: 1
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${CONTROL_DB_HOST:127.0.0.1}:${CONTROL_DB_PORT:5431}/${CONTROL_DB_NAME:rmbt}
    username: ${CONTROL_DB_USER:rmbt}
    password: ${CONTROL_DB_PASSWORD}
#    tomcat:
#      test-while-idle: true
#      test-on-borrow: true
#      validation-query: SELECT 1

measurement-server:
  host: api-dev

client-tenant:
  clientTenantMapping:
    rtr: rtr_dev
  defaultTenant: rtr

git:
  branch:${git.branch}

application-version:
  host: rtr-api-dev
  server-url: https://rtr-api-dev.nettest.org/RMBTControlServer

---
spring:
  activate:
    on-profile: prod
  datasource:
    poolSize: 20
    minIdle: 1
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${CONTROL_DB_HOST:127.0.0.1}:${CONTROL_DB_PORT:5431}/${CONTROL_DB_NAME:rmbt}
    username: ${CONTROL_DB_USER:rmbt}
#   Put the password into the environment, e.g. CONTROL_DB_PASSWORD=mypasswd
    password: ${CONTROL_DB_PASSWORD}
#    tomcat:
#      test-while-idle: true
#      test-on-borrow: true
#      validation-query: SELECT 1

application-version:
  host: ${HOST_ID:rtr-api-prod}
  server-url: ${CONTROL_SERVER_URL:http://127.0.0.1:8080/RMBTControlServer}

logging:
    config: ${LOGGING_CONFIG_FILE:classpath:logback-local.xml}
origin: ${CONTROL_ALLOWED_ORIGIN:http://127.0.0.1}

server:
  address: 0.0.0.0
  port: 8080  # Optional: specify the port if different from the default 8080
